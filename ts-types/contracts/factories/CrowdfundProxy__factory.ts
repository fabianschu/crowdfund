/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CrowdfundProxy } from "../CrowdfundProxy";

export class CrowdfundProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _fundingRecipient: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides
  ): Promise<CrowdfundProxy> {
    return super.deploy(
      _fundingRecipient,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<CrowdfundProxy>;
  }
  getDeployTransaction(
    _fundingRecipient: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fundingRecipient,
      _name,
      _symbol,
      overrides || {}
    );
  }
  attach(address: string): CrowdfundProxy {
    return super.attach(address) as CrowdfundProxy;
  }
  connect(signer: Signer): CrowdfundProxy__factory {
    return super.connect(signer) as CrowdfundProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundProxy {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fundingRecipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingRecipient",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operatorPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum CrowdfundStorage.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161088238038061088283398101604081905261002f91610217565b600c8054734e948ed8faf8fdd8fb0fdb297e152bb43f3094136001600160a01b03199182161790915560008054739ca70b93cae5576645f5f069524a9b9c3aef500690831617815567016345785d8a0000600255600180549092166001600160a01b0386161790915560035581516100ae9060059060208501906100d6565b5080516100c29060049060208401906100d6565b50506006805460ff19169055506102e69050565b8280546100e290610295565b90600052602060002090601f016020900481019282610104576000855561014a565b82601f1061011d57805160ff191683800117855561014a565b8280016001018555821561014a579182015b8281111561014a57825182559160200191906001019061012f565b5061015692915061015a565b5090565b5b80821115610156576000815560010161015b565b600082601f83011261017f578081fd5b81516001600160401b0380821115610199576101996102d0565b604051601f8301601f19908116603f011681019082821181831017156101c1576101c16102d0565b816040528381526020925086838588010111156101dc578485fd5b8491505b838210156101fd57858201830151818301840152908201906101e0565b8382111561020d57848385830101525b9695505050505050565b60008060006060848603121561022b578283fd5b83516001600160a01b0381168114610241578384fd5b60208501519093506001600160401b038082111561025d578384fd5b6102698783880161016f565b9350604086015191508082111561027e578283fd5b5061028b8682870161016f565b9150509250925092565b600181811c908216806102a957607f821691505b602082108114156102ca57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61058d806102f56000396000f3fe6080604052600436106100d65760003560e01c806370a082311161007f57806395d89b411161005957806395d89b41146102aa578063d7dfa0dd146102bf578063dd62ed3e146102ec578063e3b2594f14610324576100dd565b806370a082311461023a5780637b4044a0146102675780637ecebe001461027d576100dd565b8063200d2ed2116100b0578063200d2ed2146101bf578063313ce567146101e6578063570ca7351461020d576100dd565b806306fdde031461011e57806318160ddd146101495780631bb534ba1461016d576100dd565b366100dd57005b600c5460405173ffffffffffffffffffffffffffffffffffffffff9091169036600082376000803683855af43d806000843e81801561011a578184f35b8184fd5b34801561012a57600080fd5b5061013361033a565b6040516101409190610492565b60405180910390f35b34801561015557600080fd5b5061015f60085481565b604051908152602001610140565b34801561017957600080fd5b5060015461019a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610140565b3480156101cb57600080fd5b506006546101d99060ff1681565b6040516101409190610451565b3480156101f257600080fd5b506101fb601281565b60405160ff9091168152602001610140565b34801561021957600080fd5b5060005461019a9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561024657600080fd5b5061015f6102553660046103fe565b60096020526000908152604090205481565b34801561027357600080fd5b5061015f60035481565b34801561028957600080fd5b5061015f6102983660046103fe565b600b6020526000908152604090205481565b3480156102b657600080fd5b506101336103c8565b3480156102cb57600080fd5b50600c5461019a9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102f857600080fd5b5061015f61030736600461041f565b600a60209081526000928352604080842090915290825290205481565b34801561033057600080fd5b5061015f60025481565b6005805461034790610503565b80601f016020809104026020016040519081016040528092919081815260200182805461037390610503565b80156103c05780601f10610395576101008083540402835291602001916103c0565b820191906000526020600020905b8154815290600101906020018083116103a357829003601f168201915b505050505081565b6004805461034790610503565b803573ffffffffffffffffffffffffffffffffffffffff811681146103f957600080fd5b919050565b60006020828403121561040f578081fd5b610418826103d5565b9392505050565b60008060408385031215610431578081fd5b61043a836103d5565b9150610448602084016103d5565b90509250929050565b602081016002831061048c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602080835283518082850152825b818110156104be578581018301518582016040015282016104a2565b818111156104cf5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061051757607f821691505b60208210811415610551577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220f7044ed3f9598ab4baf7d6238e0e9eef78d1111269c1806b91684653cccc0d8564736f6c63430008040033";
