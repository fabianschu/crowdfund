/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CrowdfundStorage } from "../CrowdfundStorage";

export class CrowdfundStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _fundingRecipient: string,
    _symbol: string,
    _name: string,
    overrides?: Overrides
  ): Promise<CrowdfundStorage> {
    return super.deploy(
      _fundingRecipient,
      _symbol,
      _name,
      overrides || {}
    ) as Promise<CrowdfundStorage>;
  }
  getDeployTransaction(
    _fundingRecipient: string,
    _symbol: string,
    _name: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fundingRecipient,
      _symbol,
      _name,
      overrides || {}
    );
  }
  attach(address: string): CrowdfundStorage {
    return super.attach(address) as CrowdfundStorage;
  }
  connect(signer: Signer): CrowdfundStorage__factory {
    return super.connect(signer) as CrowdfundStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundStorage {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fundingRecipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingRecipient",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operatorPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum CrowdfundStorage.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080546001600160a01b031916739ca70b93cae5576645f5f069524a9b9c3aef500617815567016345785d8a000060025560035534801561004557600080fd5b50604051610778380380610778833981016040819052610064916101f0565b600180546001600160a01b0319166001600160a01b03851617905581516100929060049060208501906100af565b5080516100a69060059060208401906100af565b505050506102bf565b8280546100bb9061026e565b90600052602060002090601f0160209004810192826100dd5760008555610123565b82601f106100f657805160ff1916838001178555610123565b82800160010185558215610123579182015b82811115610123578251825591602001919060010190610108565b5061012f929150610133565b5090565b5b8082111561012f5760008155600101610134565b600082601f830112610158578081fd5b81516001600160401b0380821115610172576101726102a9565b604051601f8301601f19908116603f0116810190828211818310171561019a5761019a6102a9565b816040528381526020925086838588010111156101b5578485fd5b8491505b838210156101d657858201830151818301840152908201906101b9565b838211156101e657848385830101525b9695505050505050565b600080600060608486031215610204578283fd5b83516001600160a01b038116811461021a578384fd5b60208501519093506001600160401b0380821115610236578384fd5b61024287838801610148565b93506040860151915080821115610257578283fd5b5061026486828701610148565b9150509250925092565b600181811c9082168061028257607f821691505b602082108114156102a357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6104aa806102ce6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101fb578063d7dfa0dd14610203578063dd62ed3e14610223578063e3b2594f1461024e57600080fd5b806370a08231146101b25780637b4044a0146101d25780637ecebe00146101db57600080fd5b8063200d2ed2116100bd578063200d2ed21461015e578063313ce56714610178578063570ca7351461019257600080fd5b806306fdde03146100e457806318160ddd146101025780631bb534ba14610119575b600080fd5b6100ec610257565b6040516100f991906103af565b60405180910390f35b61010b60085481565b6040519081526020016100f9565b6001546101399073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f9565b60065461016b9060ff1681565b6040516100f9919061036e565b610180601281565b60405160ff90911681526020016100f9565b6000546101399073ffffffffffffffffffffffffffffffffffffffff1681565b61010b6101c036600461031b565b60096020526000908152604090205481565b61010b60035481565b61010b6101e936600461031b565b600b6020526000908152604090205481565b6100ec6102e5565b600c546101399073ffffffffffffffffffffffffffffffffffffffff1681565b61010b61023136600461033c565b600a60209081526000928352604080842090915290825290205481565b61010b60025481565b6005805461026490610420565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610420565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b505050505081565b6004805461026490610420565b803573ffffffffffffffffffffffffffffffffffffffff8116811461031657600080fd5b919050565b60006020828403121561032c578081fd5b610335826102f2565b9392505050565b6000806040838503121561034e578081fd5b610357836102f2565b9150610365602084016102f2565b90509250929050565b60208101600283106103a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602080835283518082850152825b818110156103db578581018301518582016040015282016103bf565b818111156103ec5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061043457607f821691505b6020821081141561046e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220a64eb3c73e374bed29faeec823e9c6a9367a235e8e31070342d8dc1d4c07b74764736f6c63430008040033";
